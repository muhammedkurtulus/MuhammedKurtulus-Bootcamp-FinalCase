/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LeaseContract,
  LeaseContractInterface,
} from "../../Lease.sol/LeaseContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "issueDescription",
        type: "string",
      },
    ],
    name: "IssueReported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
    ],
    name: "LeaseEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tenantName",
        type: "string",
      },
    ],
    name: "LeaseStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "ownerName",
        type: "string",
      },
    ],
    name: "addProperty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
    ],
    name: "endLease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnerProperties",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
    ],
    name: "getPropertyInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum LeaseContract.PropertyType",
            name: "propertyType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "ownerName",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tenantAddress",
                type: "address",
              },
              {
                internalType: "string",
                name: "tenantName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "startDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endDate",
                type: "uint256",
              },
            ],
            internalType: "struct LeaseContract.LeaseInfo",
            name: "leaseInfo",
            type: "tuple",
          },
        ],
        internalType: "struct LeaseContract.PropertyInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
    ],
    name: "getTenantProperties",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerProperties",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "properties",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "ownerName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tenantAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "tenantName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
        ],
        internalType: "struct LeaseContract.LeaseInfo",
        name: "leaseInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "issueDescription",
        type: "string",
      },
    ],
    name: "reportIssue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "tenantName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "startLease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tenantProperties",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e8b806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638f48bd5b116100665780638f48bd5b1461016d578063985972f91461019d5780639be8f2a6146101b9578063d8fd1df9146101ec578063e3bffcf4146102085761009e565b80632ac30626146100a357806333b7c0e3146100d357806374d125651461010357806379754f3b1461011f5780638a581ef41461013d575b600080fd5b6100bd60048036038101906100b89190611264565b610224565b6040516100ca91906114ca565b60405180910390f35b6100ed60048036038101906100e89190611544565b61048f565b6040516100fa91906115ce565b60405180910390f35b61011d60048036038101906101189190611264565b610548565b005b610127610723565b60405161013491906116b2565b60405180910390f35b610157600480360381019061015291906116d4565b610839565b60405161016491906116b2565b60405180910390f35b61018760048036038101906101829190611544565b610951565b60405161019491906115ce565b60405180910390f35b6101b760048036038101906101b29190611701565b610a0a565b005b6101d360048036038101906101ce9190611264565b610aa5565b6040516101e394939291906117fa565b60405180910390f35b61020660048036038101906102019190611872565b610ca6565b005b610222600480360381019061021d91906118fd565b610e55565b005b61022c611076565b60008260405161023c91906119ec565b90815260200160405180910390206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660018111156102d0576102cf6112ee565b5b60018111156102e2576102e16112ee565b5b81526020016001820180546102f690611a32565b80601f016020809104026020016040519081016040528092919081815260200182805461032290611a32565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b50505050508152602001600282016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546103ee90611a32565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90611a32565b80156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b5050505050815260200160028201548152602001600382015481525050815250509050919050565b600260205281600052604060002081815481106104ab57600080fd5b906000526020600020016000915091505080546104c790611a32565b80601f01602080910402602001604051908101604052809291908181526020018280546104f390611a32565b80156105405780601f1061051557610100808354040283529160200191610540565b820191906000526020600020905b81548152906001019060200180831161052357829003601f168201915b505050505081565b803373ffffffffffffffffffffffffffffffffffffffff1660008260405161057091906119ec565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ef90611ad5565b60405180910390fd5b6000808360405161060991906119ec565b90815260200160405180910390209050600081600201905060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051806020016040528060008152508160010190816106859190611ca1565b5060008160020181905550600081600301819055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f60c77e7ed18eca47e48ee4e0fa618bc9bf7c1fa6ac5f24f6c6b951fd5a179dee8360000160149054906101000a900460ff166040516107159190611d73565b60405180910390a250505050565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108305783829060005260206000200180546107a390611a32565b80601f01602080910402602001604051908101604052809291908181526020018280546107cf90611a32565b801561081c5780601f106107f15761010080835404028352916020019161081c565b820191906000526020600020905b8154815290600101906020018083116107ff57829003601f168201915b505050505081526020019060010190610784565b50505050905090565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109465783829060005260206000200180546108b990611a32565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590611a32565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b50505050508152602001906001019061089a565b505050509050919050565b6001602052816000526040600020818154811061096d57600080fd5b9060005260206000200160009150915050805461098990611a32565b80601f01602080910402602001604051908101604052809291908181526020018280546109b590611a32565b8015610a025780601f106109d757610100808354040283529160200191610a02565b820191906000526020600020905b8154815290600101906020018083116109e557829003601f168201915b505050505081565b60008083604051610a1b91906119ec565b908152602001604051809103902090508060020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f86343fbbe893ed60a158aed1566b4ed72b417bd86e08c50ede9f0f089a866f3a83604051610a9891906115ce565b60405180910390a2505050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff1690806001018054610b1790611a32565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4390611a32565b8015610b905780601f10610b6557610100808354040283529160200191610b90565b820191906000526020600020905b815481529060010190602001808311610b7357829003601f168201915b505050505090806002016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610c0b90611a32565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3790611a32565b8015610c845780601f10610c5957610100808354040283529160200191610c84565b820191906000526020600020905b815481529060010190602001808311610c6757829003601f168201915b5050505050815260200160028201548152602001600382015481525050905084565b60006001811115610cba57610cb96112ee565b5b826001811115610ccd57610ccc6112ee565b5b1480610cfc5750600180811115610ce757610ce66112ee565b5b826001811115610cfa57610cf96112ee565b5b145b610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3290611dda565b60405180910390fd5b60008084604051610d4c91906119ec565b90815260200160405180910390209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160000160146101000a81548160ff02191690836001811115610dc657610dc56112ee565b5b021790555081816001019081610ddc9190611ca1565b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084908060018154018082558091505060019003906000526020600020016000909190919091509081610e4e9190611ca1565b5050505050565b843373ffffffffffffffffffffffffffffffffffffffff16600082604051610e7d91906119ec565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efc90611ad5565b60405180910390fd5b60008087604051610f1691906119ec565b908152602001604051809103902090506000816002019050868160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085816001019081610f829190611ca1565b50848160020181905550838160030181905550600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020889080600181540180825580915050600190039060005260206000200160009091909190915090816110069190611ca1565b508673ffffffffffffffffffffffffffffffffffffffff167f7120ea297a9fd132affe8d6d4af240f224ae7446957f4fe040d8e386b3cd867286868560000160149054906101000a900460ff168a6040516110649493929190611e09565b60405180910390a25050505050505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156110b2576110b16112ee565b5b8152602001606081526020016110c66110cc565b81525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61117182611128565b810181811067ffffffffffffffff821117156111905761118f611139565b5b80604052505050565b60006111a361110a565b90506111af8282611168565b919050565b600067ffffffffffffffff8211156111cf576111ce611139565b5b6111d882611128565b9050602081019050919050565b82818337600083830152505050565b6000611207611202846111b4565b611199565b90508281526020810184848401111561122357611222611123565b5b61122e8482856111e5565b509392505050565b600082601f83011261124b5761124a61111e565b5b813561125b8482602086016111f4565b91505092915050565b60006020828403121561127a57611279611114565b5b600082013567ffffffffffffffff81111561129857611297611119565b5b6112a484828501611236565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112d8826112ad565b9050919050565b6112e8816112cd565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061132e5761132d6112ee565b5b50565b600081905061133f8261131d565b919050565b600061134f82611331565b9050919050565b61135f81611344565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561139f578082015181840152602081019050611384565b60008484015250505050565b60006113b682611365565b6113c08185611370565b93506113d0818560208601611381565b6113d981611128565b840191505092915050565b6000819050919050565b6113f7816113e4565b82525050565b600060808301600083015161141560008601826112df565b506020830151848203602086015261142d82826113ab565b915050604083015161144260408601826113ee565b50606083015161145560608601826113ee565b508091505092915050565b600060808301600083015161147860008601826112df565b50602083015161148b6020860182611356565b50604083015184820360408601526114a382826113ab565b915050606083015184820360608601526114bd82826113fd565b9150508091505092915050565b600060208201905081810360008301526114e48184611460565b905092915050565b6114f5816112cd565b811461150057600080fd5b50565b600081359050611512816114ec565b92915050565b611521816113e4565b811461152c57600080fd5b50565b60008135905061153e81611518565b92915050565b6000806040838503121561155b5761155a611114565b5b600061156985828601611503565b925050602061157a8582860161152f565b9150509250929050565b600082825260208201905092915050565b60006115a082611365565b6115aa8185611584565b93506115ba818560208601611381565b6115c381611128565b840191505092915050565b600060208201905081810360008301526115e88184611595565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061162883836113ab565b905092915050565b6000602082019050919050565b6000611648826115f0565b61165281856115fb565b9350836020820285016116648561160c565b8060005b858110156116a05784840389528151611681858261161c565b945061168c83611630565b925060208a01995050600181019050611668565b50829750879550505050505092915050565b600060208201905081810360008301526116cc818461163d565b905092915050565b6000602082840312156116ea576116e9611114565b5b60006116f884828501611503565b91505092915050565b6000806040838503121561171857611717611114565b5b600083013567ffffffffffffffff81111561173657611735611119565b5b61174285828601611236565b925050602083013567ffffffffffffffff81111561176357611762611119565b5b61176f85828601611236565b9150509250929050565b611782816112cd565b82525050565b61179181611344565b82525050565b60006080830160008301516117af60008601826112df565b50602083015184820360208601526117c782826113ab565b91505060408301516117dc60408601826113ee565b5060608301516117ef60608601826113ee565b508091505092915050565b600060808201905061180f6000830187611779565b61181c6020830186611788565b818103604083015261182e8185611595565b905081810360608301526118428184611797565b905095945050505050565b6002811061185a57600080fd5b50565b60008135905061186c8161184d565b92915050565b60008060006060848603121561188b5761188a611114565b5b600084013567ffffffffffffffff8111156118a9576118a8611119565b5b6118b586828701611236565b93505060206118c68682870161185d565b925050604084013567ffffffffffffffff8111156118e7576118e6611119565b5b6118f386828701611236565b9150509250925092565b600080600080600060a0868803121561191957611918611114565b5b600086013567ffffffffffffffff81111561193757611936611119565b5b61194388828901611236565b955050602061195488828901611503565b945050604086013567ffffffffffffffff81111561197557611974611119565b5b61198188828901611236565b93505060606119928882890161152f565b92505060806119a38882890161152f565b9150509295509295909350565b600081905092915050565b60006119c682611365565b6119d081856119b0565b93506119e0818560208601611381565b80840191505092915050565b60006119f882846119bb565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a4a57607f821691505b602082108103611a5d57611a5c611a03565b5b50919050565b7f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060008201527f7468697320616374696f6e000000000000000000000000000000000000000000602082015250565b6000611abf602b83611584565b9150611aca82611a63565b604082019050919050565b60006020820190508181036000830152611aee81611ab2565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b1a565b611b618683611b1a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611b9e611b99611b94846113e4565b611b79565b6113e4565b9050919050565b6000819050919050565b611bb883611b83565b611bcc611bc482611ba5565b848454611b27565b825550505050565b600090565b611be1611bd4565b611bec818484611baf565b505050565b5b81811015611c1057611c05600082611bd9565b600181019050611bf2565b5050565b601f821115611c5557611c2681611af5565b611c2f84611b0a565b81016020851015611c3e578190505b611c52611c4a85611b0a565b830182611bf1565b50505b505050565b600082821c905092915050565b6000611c7860001984600802611c5a565b1980831691505092915050565b6000611c918383611c67565b9150826002028217905092915050565b611caa82611365565b67ffffffffffffffff811115611cc357611cc2611139565b5b611ccd8254611a32565b611cd8828285611c14565b600060209050601f831160018114611d0b5760008415611cf9578287015190505b611d038582611c85565b865550611d6b565b601f198416611d1986611af5565b60005b82811015611d4157848901518255600182019150602085019450602081019050611d1c565b86831015611d5e5784890151611d5a601f891682611c67565b8355505b6001600288020188555050505b505050505050565b6000602082019050611d886000830184611788565b92915050565b7f496e76616c69642070726f706572747920747970650000000000000000000000600082015250565b6000611dc4601583611584565b9150611dcf82611d8e565b602082019050919050565b60006020820190508181036000830152611df381611db7565b9050919050565b611e03816113e4565b82525050565b6000608082019050611e1e6000830187611dfa565b611e2b6020830186611dfa565b611e386040830185611788565b8181036060830152611e4a8184611595565b90509594505050505056fea2646970667358221220a4e038973f7a0e1a919da41d869546db7b06556771d5056507b39a8af400e3f264736f6c63430008130033";

type LeaseContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeaseContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeaseContract__factory extends ContractFactory {
  constructor(...args: LeaseContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LeaseContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LeaseContract__factory {
    return super.connect(runner) as LeaseContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeaseContractInterface {
    return new Interface(_abi) as LeaseContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LeaseContract {
    return new Contract(address, _abi, runner) as unknown as LeaseContract;
  }
}
