/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Manager, ManagerInterface } from "../Manager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "IsNotManager",
    type: "error",
  },
  {
    inputs: [],
    name: "MustRemainOneManager",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "managerAddress",
        type: "address",
      },
    ],
    name: "isManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "managers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "managerAddress",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "managerAddress",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610900806100c46000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633d39c2601461005c5780638da5cb5b1461008c578063ac18de43146100aa578063d0ebdbe7146100c6578063f3ae2415146100e2575b600080fd5b610076600480360381019061007191906106a9565b610112565b6040516100839190610717565b60405180910390f35b610094610151565b6040516100a19190610717565b60405180910390f35b6100c460048036038101906100bf919061075e565b610177565b005b6100e060048036038101906100db919061075e565b610417565b005b6100fc60048036038101906100f7919061075e565b61054f565b60405161010991906107a6565b60405180910390f35b6000818154811061012257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101fe576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061020881610605565b6102118261054f565b610247576040517f386c955e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008054905003610286576040517f367a162400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811015610412578273ffffffffffffffffffffffffffffffffffffffff16600082815481106102c1576102c06107c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036103ff576000600160008054905061031b919061081f565b8154811061032c5761032b6107c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000828154811061036b5761036a6107c1565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054806103c5576103c4610853565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610412565b808061040a90610882565b915050610289565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049e576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806104a881610605565b6104b18261054f565b156104e8576040517ff411c32700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008161055b81610605565b60005b6000805490508110156105f9578373ffffffffffffffffffffffffffffffffffffffff1660008281548110610596576105956107c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105e65760019250506105ff565b80806105f190610882565b91505061055e565b50600091505b50919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361066b576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080fd5b6000819050919050565b61068681610673565b811461069157600080fd5b50565b6000813590506106a38161067d565b92915050565b6000602082840312156106bf576106be61066e565b5b60006106cd84828501610694565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610701826106d6565b9050919050565b610711816106f6565b82525050565b600060208201905061072c6000830184610708565b92915050565b61073b816106f6565b811461074657600080fd5b50565b60008135905061075881610732565b92915050565b6000602082840312156107745761077361066e565b5b600061078284828501610749565b91505092915050565b60008115159050919050565b6107a08161078b565b82525050565b60006020820190506107bb6000830184610797565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061082a82610673565b915061083583610673565b925082820390508181111561084d5761084c6107f0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061088d82610673565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108bf576108be6107f0565b5b60018201905091905056fea2646970667358221220c610ed77bacbcb648a1db14116d268b8b14877802663f921e019dbc88af60ac064736f6c63430008130033";

type ManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Manager__factory extends ContractFactory {
  constructor(...args: ManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Manager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Manager__factory {
    return super.connect(runner) as Manager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManagerInterface {
    return new Interface(_abi) as ManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Manager {
    return new Contract(address, _abi, runner) as unknown as Manager;
  }
}
