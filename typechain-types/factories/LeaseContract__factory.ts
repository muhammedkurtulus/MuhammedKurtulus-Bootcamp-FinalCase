/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { LeaseContract, LeaseContractInterface } from "../LeaseContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tenantName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "issueDescription",
        type: "string",
      },
    ],
    name: "IssueReported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ownerName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tenantName",
        type: "string",
      },
    ],
    name: "LeaseEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ownerName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tenantName",
        type: "string",
      },
    ],
    name: "LeaseStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "ownerName",
        type: "string",
      },
    ],
    name: "addProperty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
    ],
    name: "endLease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnerProperties",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum LeaseContract.PropertyType",
            name: "propertyType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "ownerName",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tenantAddress",
                type: "address",
              },
              {
                internalType: "string",
                name: "tenantName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "startDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endDate",
                type: "uint256",
              },
            ],
            internalType: "struct LeaseContract.LeaseInfo",
            name: "leaseInfo",
            type: "tuple",
          },
        ],
        internalType: "struct LeaseContract.PropertyInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
    ],
    name: "getPropertyInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum LeaseContract.PropertyType",
            name: "propertyType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "ownerName",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tenantAddress",
                type: "address",
              },
              {
                internalType: "string",
                name: "tenantName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "startDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endDate",
                type: "uint256",
              },
            ],
            internalType: "struct LeaseContract.LeaseInfo",
            name: "leaseInfo",
            type: "tuple",
          },
        ],
        internalType: "struct LeaseContract.PropertyInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerProperties",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "ownerName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tenantAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "tenantName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
        ],
        internalType: "struct LeaseContract.LeaseInfo",
        name: "leaseInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "properties",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "enum LeaseContract.PropertyType",
        name: "propertyType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "ownerName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tenantAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "tenantName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
        ],
        internalType: "struct LeaseContract.LeaseInfo",
        name: "leaseInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "issueDescription",
        type: "string",
      },
    ],
    name: "reportIssue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "propertyAddress",
        type: "string",
      },
      {
        internalType: "address",
        name: "tenantAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "tenantName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "durationDays",
        type: "uint256",
      },
    ],
    name: "startLease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612421806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f48bd5b1161005b5780638f48bd5b14610113578063985972f9146101465780639be8f2a614610162578063d8fd1df91461019557610088565b80632ac306261461008d57806374d12565146100bd57806379754f3b146100d95780637de8b10e146100f7575b600080fd5b6100a760048036038101906100a2919061148f565b6101b1565b6040516100b491906116f5565b60405180910390f35b6100d760048036038101906100d2919061148f565b61041c565b005b6100e1610626565b6040516100ee9190611843565b60405180910390f35b610111600480360381019061010c91906118bd565b6108f5565b005b61012d6004803603810190610128919061195c565b610b29565b60405161013d9493929190611a67565b60405180910390f35b610160600480360381019061015b9190611aba565b610d31565b005b61017c6004803603810190610177919061148f565b610da5565b60405161018c9493929190611a67565b60405180910390f35b6101af60048036038101906101aa9190611b57565b610fa6565b005b6101b96112a1565b6000826040516101c99190611c1e565b90815260200160405180910390206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16600181111561025d5761025c611519565b5b600181111561026f5761026e611519565b5b815260200160018201805461028390611c64565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611c64565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b50505050508152602001600282016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461037b90611c64565b80601f01602080910402602001604051908101604052809291908181526020018280546103a790611c64565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050815260200160028201548152602001600382015481525050815250509050919050565b803373ffffffffffffffffffffffffffffffffffffffff166000826040516104449190611c1e565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c390611d07565b60405180910390fd5b600080836040516104dd9190611c1e565b90815260200160405180910390209050600081600201905060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051806020016040528060008152508160010190816105599190611ed3565b5060008160020181905550600081600301819055503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb6af5c8697170b0ebbffa6d2b3b1da6182e2a404a607721ccd060f40daa9a5b086846002015485600301548760000160149054906101000a900460ff16886001018860010160405161061896959493929190612038565b60405180910390a350505050565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108ec57838290600052602060002090600602016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16600181111561072557610724611519565b5b600181111561073757610736611519565b5b815260200160018201805461074b90611c64565b80601f016020809104026020016040519081016040528092919081815260200182805461077790611c64565b80156107c45780601f10610799576101008083540402835291602001916107c4565b820191906000526020600020905b8154815290600101906020018083116107a757829003601f168201915b50505050508152602001600282016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461084390611c64565b80601f016020809104026020016040519081016040528092919081815260200182805461086f90611c64565b80156108bc5780601f10610891576101008083540402835291602001916108bc565b820191906000526020600020905b81548152906001019060200180831161089f57829003601f168201915b50505050508152602001600282015481526020016003820154815250508152505081526020019060010190610687565b50505050905090565b833373ffffffffffffffffffffffffffffffffffffffff1660008260405161091d9190611c1e565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099c90611d07565b60405180910390fd5b600082116109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df906120fa565b60405180910390fd5b6000429050600062015180846109fe9190612149565b82610a09919061218b565b905060008088604051610a1c9190611c1e565b908152602001604051809103902090506000816002019050878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086816001019081610a889190611ed3565b508381600201819055508281600301819055503373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f2172b6ea342c893cb70b646be04b809fdca7e80c113ae93f174e402428544c588b87878760000160149054906101000a900460ff16886001018e604051610b16969594939291906121bf565b60405180910390a3505050505050505050565b60016020528160005260406000208181548110610b4557600080fd5b9060005260206000209060060201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff1690806001018054610ba290611c64565b80601f0160208091040260200160405190810160405280929190818152602001828054610bce90611c64565b8015610c1b5780601f10610bf057610100808354040283529160200191610c1b565b820191906000526020600020905b815481529060010190602001808311610bfe57829003601f168201915b505050505090806002016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610c9690611c64565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc290611c64565b8015610d0f5780601f10610ce457610100808354040283529160200191610d0f565b820191906000526020600020905b815481529060010190602001808311610cf257829003601f168201915b5050505050815260200160028201548152602001600382015481525050905084565b6000610d3c836101b1565b905080606001516000015173ffffffffffffffffffffffffffffffffffffffff167fbd8bad04363695fcb49fe16eaff0a38ba97d4328b79a09000ca62944a4f388d38483606001516020015185604051610d9893929190612235565b60405180910390a2505050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff1690806001018054610e1790611c64565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4390611c64565b8015610e905780601f10610e6557610100808354040283529160200191610e90565b820191906000526020600020905b815481529060010190602001808311610e7357829003601f168201915b505050505090806002016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610f0b90611c64565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3790611c64565b8015610f845780601f10610f5957610100808354040283529160200191610f84565b820191906000526020600020905b815481529060010190602001808311610f6757829003601f168201915b5050505050815260200160028201548152602001600382015481525050905084565b60006001811115610fba57610fb9611519565b5b826001811115610fcd57610fcc611519565b5b1480610ffc5750600180811115610fe757610fe6611519565b5b826001811115610ffa57610ff9611519565b5b145b61103b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611032906122cd565b60405180910390fd5b6000808460405161104c9190611c1e565b90815260200160405180910390209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160000160146101000a81548160ff021916908360018111156110c6576110c5611519565b5b0217905550818160010190816110dc9190611ed3565b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000820160149054906101000a900460ff168160000160146101000a81548160ff021916908360018111156111e5576111e4611519565b5b0217905550600182018160010190816111fe9190612303565b5060028201816002016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190816112829190612303565b5060028201548160020155600382015481600301555050505050505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156112dd576112dc611519565b5b8152602001606081526020016112f16112f7565b81525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61139c82611353565b810181811067ffffffffffffffff821117156113bb576113ba611364565b5b80604052505050565b60006113ce611335565b90506113da8282611393565b919050565b600067ffffffffffffffff8211156113fa576113f9611364565b5b61140382611353565b9050602081019050919050565b82818337600083830152505050565b600061143261142d846113df565b6113c4565b90508281526020810184848401111561144e5761144d61134e565b5b611459848285611410565b509392505050565b600082601f83011261147657611475611349565b5b813561148684826020860161141f565b91505092915050565b6000602082840312156114a5576114a461133f565b5b600082013567ffffffffffffffff8111156114c3576114c2611344565b5b6114cf84828501611461565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611503826114d8565b9050919050565b611513816114f8565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061155957611558611519565b5b50565b600081905061156a82611548565b919050565b600061157a8261155c565b9050919050565b61158a8161156f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115ca5780820151818401526020810190506115af565b60008484015250505050565b60006115e182611590565b6115eb818561159b565b93506115fb8185602086016115ac565b61160481611353565b840191505092915050565b6000819050919050565b6116228161160f565b82525050565b6000608083016000830151611640600086018261150a565b506020830151848203602086015261165882826115d6565b915050604083015161166d6040860182611619565b5060608301516116806060860182611619565b508091505092915050565b60006080830160008301516116a3600086018261150a565b5060208301516116b66020860182611581565b50604083015184820360408601526116ce82826115d6565b915050606083015184820360608601526116e88282611628565b9150508091505092915050565b6000602082019050818103600083015261170f818461168b565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060808301600083015161175b600086018261150a565b50602083015161176e6020860182611581565b506040830151848203604086015261178682826115d6565b915050606083015184820360608601526117a08282611628565b9150508091505092915050565b60006117b98383611743565b905092915050565b6000602082019050919050565b60006117d982611717565b6117e38185611722565b9350836020820285016117f585611733565b8060005b85811015611831578484038952815161181285826117ad565b945061181d836117c1565b925060208a019950506001810190506117f9565b50829750879550505050505092915050565b6000602082019050818103600083015261185d81846117ce565b905092915050565b61186e816114f8565b811461187957600080fd5b50565b60008135905061188b81611865565b92915050565b61189a8161160f565b81146118a557600080fd5b50565b6000813590506118b781611891565b92915050565b600080600080608085870312156118d7576118d661133f565b5b600085013567ffffffffffffffff8111156118f5576118f4611344565b5b61190187828801611461565b94505060206119128782880161187c565b935050604085013567ffffffffffffffff81111561193357611932611344565b5b61193f87828801611461565b9250506060611950878288016118a8565b91505092959194509250565b600080604083850312156119735761197261133f565b5b60006119818582860161187c565b9250506020611992858286016118a8565b9150509250929050565b6119a5816114f8565b82525050565b6119b48161156f565b82525050565b600082825260208201905092915050565b60006119d682611590565b6119e081856119ba565b93506119f08185602086016115ac565b6119f981611353565b840191505092915050565b6000608083016000830151611a1c600086018261150a565b5060208301518482036020860152611a3482826115d6565b9150506040830151611a496040860182611619565b506060830151611a5c6060860182611619565b508091505092915050565b6000608082019050611a7c600083018761199c565b611a8960208301866119ab565b8181036040830152611a9b81856119cb565b90508181036060830152611aaf8184611a04565b905095945050505050565b60008060408385031215611ad157611ad061133f565b5b600083013567ffffffffffffffff811115611aef57611aee611344565b5b611afb85828601611461565b925050602083013567ffffffffffffffff811115611b1c57611b1b611344565b5b611b2885828601611461565b9150509250929050565b60028110611b3f57600080fd5b50565b600081359050611b5181611b32565b92915050565b600080600060608486031215611b7057611b6f61133f565b5b600084013567ffffffffffffffff811115611b8e57611b8d611344565b5b611b9a86828701611461565b9350506020611bab86828701611b42565b925050604084013567ffffffffffffffff811115611bcc57611bcb611344565b5b611bd886828701611461565b9150509250925092565b600081905092915050565b6000611bf882611590565b611c028185611be2565b9350611c128185602086016115ac565b80840191505092915050565b6000611c2a8284611bed565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7c57607f821691505b602082108103611c8f57611c8e611c35565b5b50919050565b7f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060008201527f7468697320616374696f6e000000000000000000000000000000000000000000602082015250565b6000611cf1602b836119ba565b9150611cfc82611c95565b604082019050919050565b60006020820190508181036000830152611d2081611ce4565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d4c565b611d938683611d4c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611dd0611dcb611dc68461160f565b611dab565b61160f565b9050919050565b6000819050919050565b611dea83611db5565b611dfe611df682611dd7565b848454611d59565b825550505050565b600090565b611e13611e06565b611e1e818484611de1565b505050565b5b81811015611e4257611e37600082611e0b565b600181019050611e24565b5050565b601f821115611e8757611e5881611d27565b611e6184611d3c565b81016020851015611e70578190505b611e84611e7c85611d3c565b830182611e23565b50505b505050565b600082821c905092915050565b6000611eaa60001984600802611e8c565b1980831691505092915050565b6000611ec38383611e99565b9150826002028217905092915050565b611edc82611590565b67ffffffffffffffff811115611ef557611ef4611364565b5b611eff8254611c64565b611f0a828285611e46565b600060209050601f831160018114611f3d5760008415611f2b578287015190505b611f358582611eb7565b865550611f9d565b601f198416611f4b86611d27565b60005b82811015611f7357848901518255600182019150602085019450602081019050611f4e565b86831015611f905784890151611f8c601f891682611e99565b8355505b6001600288020188555050505b505050505050565b611fae8161160f565b82525050565b60008154611fc181611c64565b611fcb81866119ba565b94506001821660008114611fe65760018114611ffc5761202f565b60ff19831686528115156020028601935061202f565b61200585611d27565b60005b8381101561202757815481890152600182019150602081019050612008565b808801955050505b50505092915050565b600060c082019050818103600083015261205281896119cb565b90506120616020830188611fa5565b61206e6040830187611fa5565b61207b60608301866119ab565b818103608083015261208d8185611fb4565b905081810360a08301526120a18184611fb4565b9050979650505050505050565b7f496e76616c6964206c65617365206475726174696f6e00000000000000000000600082015250565b60006120e46016836119ba565b91506120ef826120ae565b602082019050919050565b60006020820190508181036000830152612113816120d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121548261160f565b915061215f8361160f565b925082820261216d8161160f565b915082820484148315176121845761218361211a565b5b5092915050565b60006121968261160f565b91506121a18361160f565b92508282019050808211156121b9576121b861211a565b5b92915050565b600060c08201905081810360008301526121d981896119cb565b90506121e86020830188611fa5565b6121f56040830187611fa5565b61220260608301866119ab565b81810360808301526122148185611fb4565b905081810360a083015261222881846119cb565b9050979650505050505050565b6000606082019050818103600083015261224f81866119cb565b9050818103602083015261226381856119cb565b9050818103604083015261227781846119cb565b9050949350505050565b7f496e76616c69642070726f706572747920747970650000000000000000000000600082015250565b60006122b76015836119ba565b91506122c282612281565b602082019050919050565b600060208201905081810360008301526122e6816122aa565b9050919050565b6000815490506122fc81611c64565b9050919050565b8181036123115750506123e9565b61231a826122ed565b67ffffffffffffffff81111561233357612332611364565b5b61233d8254611c64565b612348828285611e46565b6000601f8311600181146123775760008415612365578287015490505b61236f8582611eb7565b8655506123e2565b601f19841661238587611d27565b965061239086611d27565b60005b828110156123b857848901548255600182019150600185019450602081019050612393565b868310156123d557848901546123d1601f891682611e99565b8355505b6001600288020188555050505b5050505050505b56fea2646970667358221220460f14db92692ca92f57c592fe6e9a92d596c3385d4bbde83ce09a6b446f5e0a64736f6c63430008130033";

type LeaseContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeaseContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeaseContract__factory extends ContractFactory {
  constructor(...args: LeaseContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LeaseContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LeaseContract__factory {
    return super.connect(runner) as LeaseContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeaseContractInterface {
    return new Interface(_abi) as LeaseContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LeaseContract {
    return new Contract(address, _abi, runner) as unknown as LeaseContract;
  }
}
